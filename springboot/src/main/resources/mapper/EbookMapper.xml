<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suplin.demo.mapper.EbookMapper">
    <resultMap id="BaseResultMap" type="com.suplin.demo.domain.Ebook">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="book_name" jdbcType="VARCHAR" property="bookName"/>
        <result column="vote_num" jdbcType="BIGINT" property="voteNum"/>
        <result column="view_num" jdbcType="BIGINT" property="viewNum"/>
        <result column="doc_num" jdbcType="BIGINT" property="docNum"/>
        <result column="des_cription" jdbcType="VARCHAR" property="desCription"/>
        <result column="category1_id" jdbcType="BIGINT" property="category1Id"/>
        <result column="category2_id" jdbcType="BIGINT" property="category2Id"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, book_name, vote_num, view_num, doc_num, des_cription, category1_id, category2_id,
        cover
    </sql>
    <select id="selectByExample" parameterType="com.suplin.demo.domain.EbookExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ebook
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ebook
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ebook
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.suplin.demo.domain.EbookExample">
        delete from ebook
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.suplin.demo.domain.Ebook">
        insert into ebook (id, book_name, vote_num,
        view_num, doc_num, des_cription,
        category1_id, category2_id, cover
        )
        values (#{id,jdbcType=BIGINT}, #{bookName,jdbcType=VARCHAR}, #{voteNum,jdbcType=BIGINT},
        #{viewNum,jdbcType=BIGINT}, #{docNum,jdbcType=BIGINT}, #{desCription,jdbcType=VARCHAR},
        #{category1Id,jdbcType=BIGINT}, #{category2Id,jdbcType=BIGINT}, #{cover,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.suplin.demo.domain.Ebook">
        insert into ebook
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookName != null">
                book_name,
            </if>
            <if test="voteNum != null">
                vote_num,
            </if>
            <if test="viewNum != null">
                view_num,
            </if>
            <if test="docNum != null">
                doc_num,
            </if>
            <if test="desCription != null">
                des_cription,
            </if>
            <if test="category1Id != null">
                category1_id,
            </if>
            <if test="category2Id != null">
                category2_id,
            </if>
            <if test="cover != null">
                cover,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="voteNum != null">
                #{voteNum,jdbcType=BIGINT},
            </if>
            <if test="viewNum != null">
                #{viewNum,jdbcType=BIGINT},
            </if>
            <if test="docNum != null">
                #{docNum,jdbcType=BIGINT},
            </if>
            <if test="desCription != null">
                #{desCription,jdbcType=VARCHAR},
            </if>
            <if test="category1Id != null">
                #{category1Id,jdbcType=BIGINT},
            </if>
            <if test="category2Id != null">
                #{category2Id,jdbcType=BIGINT},
            </if>
            <if test="cover != null">
                #{cover,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.suplin.demo.domain.EbookExample" resultType="java.lang.Long">
        select count(*) from ebook
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ebook
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.bookName != null">
                book_name = #{record.bookName,jdbcType=VARCHAR},
            </if>
            <if test="record.voteNum != null">
                vote_num = #{record.voteNum,jdbcType=BIGINT},
            </if>
            <if test="record.viewNum != null">
                view_num = #{record.viewNum,jdbcType=BIGINT},
            </if>
            <if test="record.docNum != null">
                doc_num = #{record.docNum,jdbcType=BIGINT},
            </if>
            <if test="record.desCription != null">
                des_cription = #{record.desCription,jdbcType=VARCHAR},
            </if>
            <if test="record.category1Id != null">
                category1_id = #{record.category1Id,jdbcType=BIGINT},
            </if>
            <if test="record.category2Id != null">
                category2_id = #{record.category2Id,jdbcType=BIGINT},
            </if>
            <if test="record.cover != null">
                cover = #{record.cover,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ebook
        set id = #{record.id,jdbcType=BIGINT},
        book_name = #{record.bookName,jdbcType=VARCHAR},
        vote_num = #{record.voteNum,jdbcType=BIGINT},
        view_num = #{record.viewNum,jdbcType=BIGINT},
        doc_num = #{record.docNum,jdbcType=BIGINT},
        des_cription = #{record.desCription,jdbcType=VARCHAR},
        category1_id = #{record.category1Id,jdbcType=BIGINT},
        category2_id = #{record.category2Id,jdbcType=BIGINT},
        cover = #{record.cover,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.suplin.demo.domain.Ebook">
        update ebook
        <set>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="voteNum != null">
                vote_num = #{voteNum,jdbcType=BIGINT},
            </if>
            <if test="viewNum != null">
                view_num = #{viewNum,jdbcType=BIGINT},
            </if>
            <if test="docNum != null">
                doc_num = #{docNum,jdbcType=BIGINT},
            </if>
            <if test="desCription != null">
                des_cription = #{desCription,jdbcType=VARCHAR},
            </if>
            <if test="category1Id != null">
                category1_id = #{category1Id,jdbcType=BIGINT},
            </if>
            <if test="category2Id != null">
                category2_id = #{category2Id,jdbcType=BIGINT},
            </if>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.suplin.demo.domain.Ebook">
        update ebook
        set book_name = #{bookName,jdbcType=VARCHAR},
        vote_num = #{voteNum,jdbcType=BIGINT},
        view_num = #{viewNum,jdbcType=BIGINT},
        doc_num = #{docNum,jdbcType=BIGINT},
        des_cription = #{desCription,jdbcType=VARCHAR},
        category1_id = #{category1Id,jdbcType=BIGINT},
        category2_id = #{category2Id,jdbcType=BIGINT},
        cover = #{cover,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>