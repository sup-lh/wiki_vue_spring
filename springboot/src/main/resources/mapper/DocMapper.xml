<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suplin.demo.mapper.DocMapper">
    <resultMap id="BaseResultMap" type="com.suplin.demo.domain.Doc">
        <id column="father_id" jdbcType="BIGINT" property="fatherId"/>
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="view_count" jdbcType="INTEGER" property="viewCount"/>
        <result column="vote_count" jdbcType="INTEGER" property="voteCount"/>
        <result column="ebook_id" jdbcType="BIGINT" property="ebookId"/>
        <result column="parent" jdbcType="BIGINT" property="parent"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        father_id, id, `name`, sort, view_count, vote_count, ebook_id, parent
    </sql>
    <select id="selectByExample" parameterType="com.suplin.demo.domain.DocExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from doc
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from doc
        where father_id = #{fatherId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from doc
        where father_id = #{fatherId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.suplin.demo.domain.DocExample">
        delete from doc
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.suplin.demo.domain.Doc">
        insert into doc (father_id, id, `name`,
        sort, view_count, vote_count,
        ebook_id, parent)
        values (#{fatherId,jdbcType=BIGINT}, #{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
        #{sort,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER}, #{voteCount,jdbcType=INTEGER},
        #{ebookId,jdbcType=BIGINT}, #{parent,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.suplin.demo.domain.Doc">
        insert into doc
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fatherId != null">
                father_id,
            </if>
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="viewCount != null">
                view_count,
            </if>
            <if test="voteCount != null">
                vote_count,
            </if>
            <if test="ebookId != null">
                ebook_id,
            </if>
            <if test="parent != null">
                parent,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fatherId != null">
                #{fatherId,jdbcType=BIGINT},
            </if>
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="viewCount != null">
                #{viewCount,jdbcType=INTEGER},
            </if>
            <if test="voteCount != null">
                #{voteCount,jdbcType=INTEGER},
            </if>
            <if test="ebookId != null">
                #{ebookId,jdbcType=BIGINT},
            </if>
            <if test="parent != null">
                #{parent,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.suplin.demo.domain.DocExample" resultType="java.lang.Long">
        select count(*) from doc
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update doc
        <set>
            <if test="record.fatherId != null">
                father_id = #{record.fatherId,jdbcType=BIGINT},
            </if>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.viewCount != null">
                view_count = #{record.viewCount,jdbcType=INTEGER},
            </if>
            <if test="record.voteCount != null">
                vote_count = #{record.voteCount,jdbcType=INTEGER},
            </if>
            <if test="record.ebookId != null">
                ebook_id = #{record.ebookId,jdbcType=BIGINT},
            </if>
            <if test="record.parent != null">
                parent = #{record.parent,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update doc
        set father_id = #{record.fatherId,jdbcType=BIGINT},
        id = #{record.id,jdbcType=BIGINT},
        `name` = #{record.name,jdbcType=VARCHAR},
        sort = #{record.sort,jdbcType=INTEGER},
        view_count = #{record.viewCount,jdbcType=INTEGER},
        vote_count = #{record.voteCount,jdbcType=INTEGER},
        ebook_id = #{record.ebookId,jdbcType=BIGINT},
        parent = #{record.parent,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.suplin.demo.domain.Doc">
        update doc
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="viewCount != null">
                view_count = #{viewCount,jdbcType=INTEGER},
            </if>
            <if test="voteCount != null">
                vote_count = #{voteCount,jdbcType=INTEGER},
            </if>
            <if test="ebookId != null">
                ebook_id = #{ebookId,jdbcType=BIGINT},
            </if>
            <if test="parent != null">
                parent = #{parent,jdbcType=BIGINT},
            </if>
        </set>
        where father_id = #{fatherId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.suplin.demo.domain.Doc">
        update doc
        set id = #{id,jdbcType=BIGINT},
        `name` = #{name,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=INTEGER},
        view_count = #{viewCount,jdbcType=INTEGER},
        vote_count = #{voteCount,jdbcType=INTEGER},
        ebook_id = #{ebookId,jdbcType=BIGINT},
        parent = #{parent,jdbcType=BIGINT}
        where father_id = #{fatherId,jdbcType=BIGINT}
    </update>
</mapper>